 yum install git -y  : To install git

 which git  : To know path of git

 git version   : To know the version

 git config --global user.name "ashish"  : To config profile

 git config --global user.email "ashishlodhi09@gmail.com"

 git config --list : To list all config

 git status : To check the status if the code is working area or pushed to staging area

 git add . : To add file from working directory to staging area

 git commit -m "message" : To add file from staging  area to local repository
 
 git log : To know the commit id and log who made those changes

 git log -1 : To show the last commit only

 git log --oneline : To show all commits in one line

 git log --grep "Word" : To find that commit where you have added this "word" in it's comment while commit

 git show <commit id> : To show details what commit has been done to code base

 git remote add origin <git url> :  To add local repository to remote repo

 --> git remote add origin https://github.com/ashish0920/testrepo.git

 git branch -M main  :  To create branch if it is a new repositroy

 git push -u origin main : Whatever origin we will add it will push the code from local repo to that remote repo

 git pull origin main : To pull code from repo

 git remote set-url : For changing your remote URL 

 git merge origin/main  : To merge the fetched changes into your branch

 git rebase origin/main : To incorporate the fetched changes by applying your local commits on top of the updated main branch, you can use rebase.

--------------------------------------------------------------------------------------------------------------------------------------------------
 To ignore the files while commiting name a file define all the files format you don't want to be get committed.
 create a file and define all the format in that file you want to ignore 
 > vim .gitignore
   *.java
   *.css
   ~
   ~
   :wq
 > git add .gitgnore
 > git commit -m "ignore file formats in this file"
 > git push 
 All the files will be pushed to remote repo except the format mentioned in this (.gitignore) file

 * ctrl+L : to clear screen
---------------------------------------------------------------------------------------------------------------------------------------------------
 * Untill we add files from working area to staging area we will be able to see that file from all branches once we add that to staging area of any particular branch we will not see it in any other branch.
 
 git branch :  To see list of available branches (* Represent the current branch you are working on)

 git branch <branch name> :  To create a new branch
 
 --> Whenever we create a branch all data which is there in main branch will get copied to it's feature branch just do "ls" to check after you checkout to feature branch
 
 git checkout <name of branch you want to switch> :  To switch branch

 * Merge : We use pulling mechanism to merge branches (Ex > (why) If we have created a feature branch and worked on it now we want to add that to main branch we will just pull the new files/code from feature branch not the complete files as while creating branch we have already copied everthing from main branch to feature branch)
  
 git merge <branch name> : When we want to merge any feature branch to main branch/another feature branch just go to the branch where where you want the feature branch to get merged then execute this command.
 
 * If you want any feature branch to get pushed to central repo after doing commit execute (below cmd) then it will show pull request url open that in browser merge it from browser.(*doubt) 
 
 git push --set-upstream origin <featured branch name> : To push featured branch to central repo 

 * Git conflict : When same name file have different content in different branches and you do merge resolve conflict then add/commi.
 
 
 l












 
 